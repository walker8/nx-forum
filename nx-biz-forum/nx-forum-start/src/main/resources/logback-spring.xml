<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />

    <!--定义参数,后面可以通过${APP_NAME}使用-->
    <property name="APP_NAME" value="Data" />
    <property name="LOG_PATH" value="${user.home}/${APP_NAME}/logs" />
    <property name="LOG_FILE" value="${LOG_PATH}/nx-forum.log" />

    <!--  输出到文件  -->
    <appender name="APPLICATION"
        class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--定义日志输出的路径-->
        <file>${LOG_FILE}</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>7</maxHistory>
            <maxFileSize>50MB</maxFileSize>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 输出到控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!--rootLogger是默认的logger-->
    <root level="INFO">
        <!--定义了两个appender，日志会通过往这两个appender里面写-->
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="APPLICATION" />
    </root>

    <!--应用日志-->
    <!--这个logger没有指定appender，它会继承root节点中定义的那些appender-->
    <logger name="com.leyuz.bbs" level="INFO"/>
    <!-- 使用 Spring Profile 实现环境隔离 -->
    <springProfile name="dev">
        <logger name="com.leyuz.bbs" level="DEBUG"/>
    </springProfile>

    <springProfile name="test">
        <logger name="com.leyuz.bbs" level="INFO"/>
    </springProfile>

    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="APPLICATION" /> <!-- 生产环境仅保留文件输出 -->
        </root>
        <logger name="com.leyuz.bbs" level="INFO"/>
    </springProfile>

    <!--数据库日志-->
    <!--由于这个logger自动继承了root的appender，root中已经有stdout的appender了，自己这边又引入了stdout的appender-->
    <!--如果没有设置 additivity="false" ,就会导致一条日志在控制台输出两次的情况-->
    <!--additivity表示要不要使用rootLogger配置的appender进行输出-->
    <logger name="com.apache.ibatis" level="WARN" additivity="false">
        <appender-ref ref="CONSOLE"/>
    </logger>
</configuration>
